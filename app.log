[INFO] Scanning for projects...
[INFO] 
[INFO] --------------------------< com.kardo:kardo >---------------------------
[INFO] Building kardo 1.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot:3.1.2:run (default-cli) > test-compile @ kardo >>>
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ kardo ---
[INFO] Copying 3 resources from src/main/resources to target/classes
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ kardo ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ kardo ---
[INFO] skip non existing resourceDirectory /Users/nishanthvaidya/Desktop/OOD/Balekai/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ kardo ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot:3.1.2:run (default-cli) < test-compile @ kardo <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot:3.1.2:run (default-cli) @ kardo ---
[INFO] Attaching agents: []
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T19:53:30.116-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T19:53:30.118-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T19:53:30.145-04:00  INFO 12705 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-03T19:53:30.145-04:00  INFO 12705 --- [  restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-03T19:53:30.467-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T19:53:30.500-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25 ms. Found 4 JPA repository interfaces.
2025-09-03T19:53:30.815-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T19:53:30.821-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T19:53:30.822-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T19:53:30.878-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T19:53:30.879-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 733 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T19:53:30.931-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T19:53:30.956-04:00  INFO 12705 --- [  restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.6.Final
2025-09-03T19:53:30.957-04:00  INFO 12705 --- [  restartedMain] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2025-09-03T19:53:31.013-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:53:31.065-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T19:53:31.073-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-09-03T19:53:31.135-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@183b5855
2025-09-03T19:53:31.135-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-09-03T19:53:31.240-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:53:31.556-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T19:53:31.654-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:53:31.814-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T19:53:31.814-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T19:53:31.814-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T19:53:31.814-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T19:53:31.844-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T19:53:31.844-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T19:53:31.847-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ✅ Firebase initialized successfully: [DEFAULT]
2025-09-03T19:53:31.914-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T19:53:32.060-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T19:53:32.071-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T19:53:32.077-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 2.164 seconds (process running for 2.392)
Hibernate: select count(*) from "user" u1_0
2025-09-03T19:53:44.983-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T19:53:44.983-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T19:53:44.985-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-09-03T19:53:44.987-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /boards/10
2025-09-03T19:53:44.987-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:53:49.547-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:53:49.548-04:00  WARN 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards/10
2025-09-03T19:54:03.461-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /boards/10
2025-09-03T19:54:03.461-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:03.487-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:03.478-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:54:03.756-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:54:03.756-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:05.070-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:05.070-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:05.794-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
2025-09-03T19:54:05.794-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:06.879-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/10
2025-09-03T19:54:06.892-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
2025-09-03T19:54:07.241-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:07.380-04:00  INFO 12705 --- [       Thread-5] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:07.392-04:00  INFO 12705 --- [       Thread-5] o.apache.catalina.core.StandardWrapper   : Waiting for [2] instance(s) to be deallocated for Servlet [dispatcherServlet]
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:07.497-04:00  INFO 12705 --- [       Thread-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T19:54:07.515-04:00  WARN 12705 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T19:54:07.516-04:00  WARN 12705 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T19:54:07.542-04:00  INFO 12705 --- [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:54:07.546-04:00  INFO 12705 --- [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-09-03T19:54:07.548-04:00  INFO 12705 --- [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T19:54:07.758-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T19:54:07.758-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T19:54:07.915-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T19:54:07.938-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 4 JPA repository interfaces.
2025-09-03T19:54:08.007-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T19:54:08.008-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T19:54:08.008-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T19:54:08.014-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T19:54:08.014-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 255 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T19:54:08.035-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T19:54:08.047-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:54:08.047-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T19:54:08.048-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-09-03T19:54:08.066-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@5954b0c7
2025-09-03T19:54:08.066-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-09-03T19:54:08.099-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:54:08.140-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T19:54:08.211-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:54:08.246-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T19:54:08.246-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T19:54:08.246-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T19:54:08.246-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T19:54:08.247-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T19:54:08.247-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T19:54:08.247-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T19:54:08.294-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T19:54:08.345-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T19:54:08.350-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T19:54:08.352-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.611 seconds (process running for 38.667)
Hibernate: select count(*) from "user" u1_0
2025-09-03T19:54:08.357-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T19:54:09.083-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T19:54:09.084-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T19:54:09.086-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-09-03T19:54:09.088-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:09.089-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:09.100-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:09.103-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:09.121-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:09.170-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:09.170-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:09.172-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:09.174-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:09.175-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:09.203-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:09.203-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:09.205-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:09.207-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:09.209-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:11.120-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /boards/1
2025-09-03T19:54:11.121-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:54:11.120-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /boards/1
2025-09-03T19:54:11.120-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:11.122-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:54:11.122-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:11.131-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/1
2025-09-03T19:54:11.131-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:11.131-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:11.136-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:11.144-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
2025-09-03T19:54:11.146-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:11.157-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
2025-09-03T19:54:11.158-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/1
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:11.178-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/1
2025-09-03T19:54:11.178-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:11.179-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:11.180-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
2025-09-03T19:54:11.182-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/1
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:54:11.196-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:11.196-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:11.197-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:11.198-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:11.199-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:16.613-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:54:16.613-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:16.614-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:16.614-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:16.625-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:16.625-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:16.630-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
2025-09-03T19:54:16.630-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:16.637-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/10
2025-09-03T19:54:16.637-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:16.644-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:54:16.644-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
2025-09-03T19:54:16.646-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
2025-09-03T19:54:16.647-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:16.648-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/10
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:16.662-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:16.662-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:16.663-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:16.664-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:16.665-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:20.130-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards
2025-09-03T19:54:20.133-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:54:20.140-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T19:54:20.140-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:20.144-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:20.146-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:20.153-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T19:54:24.694-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/history
2025-09-03T19:54:24.694-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:54:24.696-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:54:24.696-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:24.698-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:24.698-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:24.700-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:54:38.011-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:54:38.011-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:54:38.015-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:38.015-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:38.071-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:38.071-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:38.094-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
2025-09-03T19:54:38.096-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:38.116-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
2025-09-03T19:54:38.116-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/10
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T19:54:41.704-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:54:41.705-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:54:41.719-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:54:41.726-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:54:41.736-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:55:35.865-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:55:35.870-04:00  WARN 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards/10
2025-09-03T19:55:44.788-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-09-03T19:55:44.813-04:00  INFO 12705 --- [       Thread-7] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T19:55:44.814-04:00  INFO 12705 --- [       Thread-7] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T19:55:44.818-04:00  WARN 12705 --- [       Thread-7] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-2 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T19:55:44.824-04:00  INFO 12705 --- [       Thread-7] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:55:44.826-04:00  INFO 12705 --- [       Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2025-09-03T19:55:44.829-04:00  INFO 12705 --- [       Thread-7] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T19:55:44.905-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T19:55:44.905-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T19:55:44.967-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T19:55:44.975-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 4 JPA repository interfaces.
2025-09-03T19:55:45.026-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T19:55:45.027-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T19:55:45.027-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T19:55:45.032-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T19:55:45.032-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 126 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T19:55:45.048-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T19:55:45.050-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:55:45.050-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T19:55:45.051-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2025-09-03T19:55:45.064-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@7763fb8
2025-09-03T19:55:45.064-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2025-09-03T19:55:45.080-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:55:45.107-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T19:55:45.171-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:55:45.198-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T19:55:45.199-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T19:55:45.199-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T19:55:45.199-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T19:55:45.200-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T19:55:45.200-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T19:55:45.200-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T19:55:45.239-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T19:55:45.283-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T19:55:45.287-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T19:55:45.289-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.394 seconds (process running for 135.604)
Hibernate: select count(*) from "user" u1_0
2025-09-03T19:55:45.292-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T19:55:49.057-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T19:55:49.057-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T19:55:49.058-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0
2025-09-03T19:55:55.497-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T19:55:55.497-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:55:55.509-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user workflow2@example.com
2025-09-03T19:55:55.509-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T19:56:43.576-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T19:56:43.575-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/10
2025-09-03T19:56:43.613-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:56:43.613-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:56:43.655-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:56:43.655-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:56:43.689-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
2025-09-03T19:56:43.689-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0
2025-09-03T19:56:44.097-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/10
2025-09-03T19:56:44.097-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:57:09.805-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T19:57:09.808-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: insert into "user" (email,name,password,id) values (?,?,?,?)
2025-09-03T19:57:14.342-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T19:57:14.343-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
2025-09-03T19:57:18.780-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T19:57:18.782-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: insert into "user" (email,name,password,id) values (?,?,?,?)
2025-09-03T19:57:25.414-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T19:57:25.416-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:57:25.425-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:57:25.425-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T19:57:39.230-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/7/transition
2025-09-03T19:57:39.230-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:57:39.238-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:57:39.238-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/7/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T19:57:44.957-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/7/move
2025-09-03T19:57:44.958-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:57:44.963-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:57:44.963-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/7/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T19:57:50.607-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/7
2025-09-03T19:57:50.608-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:57:50.614-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:57:50.614-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/7
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:57:56.398-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/7/history
2025-09-03T19:57:56.399-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:57:56.402-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:57:56.402-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/7/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:58:03.114-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/7/update-metadata
2025-09-03T19:58:03.115-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:58:03.119-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user frontend2@example.com
2025-09-03T19:58:03.119-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/7/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:58:15.742-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-09-03T19:58:15.752-04:00  INFO 12705 --- [      Thread-11] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T19:58:15.753-04:00  INFO 12705 --- [      Thread-11] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T19:58:15.756-04:00  WARN 12705 --- [      Thread-11] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-3 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T19:58:15.762-04:00  INFO 12705 --- [      Thread-11] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:58:15.765-04:00  INFO 12705 --- [      Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2025-09-03T19:58:15.766-04:00  INFO 12705 --- [      Thread-11] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T19:58:15.862-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T19:58:15.862-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T19:58:15.941-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T19:58:15.947-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 4 JPA repository interfaces.
2025-09-03T19:58:15.997-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T19:58:15.998-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T19:58:15.998-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T19:58:16.003-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T19:58:16.003-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 140 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T19:58:16.019-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T19:58:16.021-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:58:16.021-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T19:58:16.022-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2025-09-03T19:58:16.035-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@20858e2d
2025-09-03T19:58:16.035-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2025-09-03T19:58:16.052-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T19:58:16.083-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T19:58:16.175-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T19:58:16.205-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T19:58:16.205-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T19:58:16.205-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T19:58:16.206-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T19:58:16.206-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T19:58:16.206-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T19:58:16.206-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T19:58:16.247-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T19:58:16.293-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T19:58:16.297-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T19:58:16.298-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.451 seconds (process running for 286.613)
Hibernate: select count(*) from "user" u1_0
2025-09-03T19:58:16.301-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T19:59:19.165-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T19:59:19.166-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T19:59:19.179-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2025-09-03T19:59:19.180-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:59:19.183-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:19.196-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:19.201-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:19.209-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:21.252-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/update-metadata
2025-09-03T19:59:21.252-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:59:21.265-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T19:59:21.265-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:21.269-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:21.271-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:21.279-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:29.881-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:59:29.882-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:29.892-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:29.899-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:29.909-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:33.374-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/transition
2025-09-03T19:59:33.381-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:59:33.394-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/transition
2025-09-03T19:59:33.394-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:33.409-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:33.413-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:33.418-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T19:59:33.454-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/move
2025-09-03T19:59:33.454-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:59:33.456-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/move
2025-09-03T19:59:33.456-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:33.457-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:33.458-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:33.459-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T19:59:34.642-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T19:59:34.642-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:34.642-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:34.643-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:34.644-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:43.034-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:59:43.035-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:43.038-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:43.041-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:43.046-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:46.861-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/assign
2025-09-03T19:59:46.862-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T19:59:46.886-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T19:59:46.886-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:46.889-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:46.902-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:46.907-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T19:59:46.924-04:00  WARN 12705 --- [nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T19:59:47.879-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T19:59:47.880-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:47.888-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:47.890-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:47.900-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:50.027-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:59:50.027-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:50.030-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:50.031-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:50.035-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:54.738-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T19:59:54.744-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:54.763-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:54.770-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:54.799-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T19:59:54.806-04:00  WARN 12705 --- [nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T19:59:55.414-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T19:59:55.415-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:55.417-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:55.418-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:55.420-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T19:59:57.025-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T19:59:57.028-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T19:59:57.071-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T19:59:57.086-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T19:59:57.115-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:00:00.065-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:00:00.071-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:00.092-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:00:00.117-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:00:00.158-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T20:00:00.190-04:00  WARN 12705 --- [nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T20:00:02.261-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:00:02.265-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:02.270-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:00:02.272-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:00:02.281-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T20:00:02.289-04:00  WARN 12705 --- [nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T20:00:04.421-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:00:04.422-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:04.433-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:00:04.441-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:00:04.453-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T20:00:04.457-04:00  WARN 12705 --- [nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T20:00:07.262-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:00:07.262-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:07.269-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:00:07.276-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:00:07.305-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T20:00:07.312-04:00  WARN 12705 --- [nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T20:00:09.800-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:00:09.803-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:09.817-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:00:09.819-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:00:09.859-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
2025-09-03T20:00:09.864-04:00  WARN 12705 --- [nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "NaN"]
2025-09-03T20:00:27.700-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T20:00:27.702-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: insert into "user" (email,name,password,id) values (?,?,?,?)
2025-09-03T20:00:27.885-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:00:27.885-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:27.886-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:27.886-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: insert into board (is_private,name,owner_id,owner_name,visibility) values (?,?,?,?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:00:27.937-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:00:27.937-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:27.938-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:27.938-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: insert into board (is_private,name,owner_id,owner_name,visibility) values (?,?,?,?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:00:27.962-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/me
2025-09-03T20:00:27.963-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:27.963-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:27.963-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/me
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.owner_id=?
2025-09-03T20:00:27.982-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /boards/16
2025-09-03T20:00:27.982-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:27.983-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:27.983-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/16
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: update board set is_private=?,name=?,owner_id=?,owner_name=?,visibility=? where id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:00:28.012-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/16
2025-09-03T20:00:28.012-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.013-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.013-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/16
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:00:28.030-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /lists
2025-09-03T20:00:28.030-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.031-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.031-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:00:28.049-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /lists
2025-09-03T20:00:28.049-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.050-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.050-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:00:28.063-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists
2025-09-03T20:00:28.063-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.064-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.064-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: select t1_0.id,t1_0.board_id,t1_0.name from trello_list t1_0
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:00:28.097-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists/85
2025-09-03T20:00:28.097-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.097-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.097-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/85
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:00:28.114-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /lists/85
2025-09-03T20:00:28.114-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.115-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.115-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/85
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update trello_list set board_id=?,name=? where id=?
2025-09-03T20:00:28.134-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:00:28.134-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.135-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.135-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:00:28.152-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:00:28.152-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.153-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.153-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:00:28.169-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/
2025-09-03T20:00:28.170-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.171-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.171-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/
2025-09-03T20:00:28.209-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards//assign
2025-09-03T20:00:28.209-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.210-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.210-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards//assign
2025-09-03T20:00:28.238-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards//move
2025-09-03T20:00:28.238-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.239-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.239-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards//move
2025-09-03T20:00:28.255-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards//update-metadata
2025-09-03T20:00:28.255-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.256-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.256-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards//update-metadata
2025-09-03T20:00:28.273-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards//history
2025-09-03T20:00:28.273-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.274-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.274-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards//history
2025-09-03T20:00:28.289-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T20:00:28.289-04:00  WARN 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards
2025-09-03T20:00:28.303-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:00:28.303-04:00  WARN 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards
2025-09-03T20:00:28.317-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards
2025-09-03T20:00:28.318-04:00  WARN 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /cards
2025-09-03T20:00:28.333-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:00:28.335-04:00  WARN 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /cards
2025-09-03T20:00:28.349-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/99999
2025-09-03T20:00:28.349-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.350-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.350-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/99999
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
2025-09-03T20:00:28.352-04:00  WARN 12705 --- [nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: Board not found]
2025-09-03T20:00:28.366-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists/99999
2025-09-03T20:00:28.366-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.367-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.367-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/99999
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:00:28.369-04:00  WARN 12705 --- [io-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: List not found]
2025-09-03T20:00:28.384-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/99999
2025-09-03T20:00:28.384-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.385-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.385-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/99999
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
2025-09-03T20:00:28.387-04:00  WARN 12705 --- [nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: Card not found with id: 99999]
2025-09-03T20:00:28.407-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:00:28.407-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.408-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.409-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:00:28.411-04:00  WARN 12705 --- [nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: List not found with id: 99999]
2025-09-03T20:00:28.426-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /cards/
2025-09-03T20:00:28.426-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.427-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.427-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/
2025-09-03T20:00:28.444-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /lists/85
2025-09-03T20:00:28.444-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.446-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.446-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/85
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: delete from trello_list where id=?
2025-09-03T20:00:28.479-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /boards/16
2025-09-03T20:00:28.479-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.481-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.481-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/16
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from board where id=?
2025-09-03T20:00:28.505-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T20:00:28.505-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.506-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.506-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:00:28.540-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists
2025-09-03T20:00:28.540-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.541-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.541-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: select t1_0.id,t1_0.board_id,t1_0.name from trello_list t1_0
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:00:28.569-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards
2025-09-03T20:00:28.569-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:00:28.570-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user feature@example.com
2025-09-03T20:00:28.570-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select c1_0.id,c1_0."assigned_user_id",c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.list_id,c1_0.title from card c1_0
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0
2025-09-03T20:02:04.050-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-09-03T20:02:04.063-04:00  INFO 12705 --- [      Thread-15] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:02:04.064-04:00  INFO 12705 --- [      Thread-15] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T20:02:04.068-04:00  WARN 12705 --- [      Thread-15] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-4 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:02:04.072-04:00  INFO 12705 --- [      Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:02:04.073-04:00  INFO 12705 --- [      Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2025-09-03T20:02:04.078-04:00  INFO 12705 --- [      Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:02:04.495-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:02:04.496-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:02:04.952-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:02:04.975-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 4 JPA repository interfaces.
2025-09-03T20:02:05.650-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:02:05.658-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:02:05.658-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:02:05.697-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:02:05.697-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1184 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:02:05.740-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:02:05.744-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:02:05.744-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:02:05.744-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2025-09-03T20:02:05.777-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@7528aa0f
2025-09-03T20:02:05.778-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2025-09-03T20:02:05.973-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:02:06.070-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T20:02:06.208-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:02:06.265-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T20:02:06.265-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T20:02:06.265-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T20:02:06.265-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T20:02:06.267-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T20:02:06.267-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T20:02:06.267-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T20:02:06.316-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:02:06.364-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:02:06.368-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:02:06.370-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 2.05 seconds (process running for 516.643)
Hibernate: select count(*) from "user" u1_0
2025-09-03T20:02:06.374-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T20:02:11.468-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T20:02:11.469-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T20:02:11.471-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2025-09-03T20:02:11.472-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:02:11.472-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:02:11.477-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:02:11.479-04:00 ERROR 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Both JWT and Firebase token verification failed
2025-09-03T20:02:15.545-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T20:02:15.546-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: insert into "user" (email,name,password,id) values (?,?,?,?)
2025-09-03T20:02:20.796-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:02:20.797-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:02:20.806-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:02:20.806-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:02:24.554-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:02:24.555-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:02:24.558-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:02:24.558-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:02:56.295-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/12
2025-09-03T20:02:56.295-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:02:56.302-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:02:56.302-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/12
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:03:01.825-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/6/move
2025-09-03T20:03:01.825-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:03:01.830-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:03:01.830-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/6/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:03:11.400-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/6/transition
2025-09-03T20:03:11.401-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:03:11.404-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:03:11.404-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/6/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:04:59.155-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /auth/register
2025-09-03T20:04:59.156-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Skipping auth for auth endpoint /auth/register
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.email=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: insert into "user" (email,name,password,id) values (?,?,?,?)
2025-09-03T20:04:59.293-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:04:59.293-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.294-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.294-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: insert into board (is_private,name,owner_id,owner_name,visibility) values (?,?,?,?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:04:59.326-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:04:59.326-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.327-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.327-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: insert into board (is_private,name,owner_id,owner_name,visibility) values (?,?,?,?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:04:59.351-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/me
2025-09-03T20:04:59.351-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.352-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.352-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/me
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.owner_id=?
2025-09-03T20:04:59.371-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /boards/18
2025-09-03T20:04:59.372-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.373-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.373-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/18
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: update board set is_private=?,name=?,owner_id=?,owner_name=?,visibility=? where id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:04:59.401-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/18
2025-09-03T20:04:59.401-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.402-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.402-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/18
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:04:59.420-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /lists
2025-09-03T20:04:59.420-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.421-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.421-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:04:59.499-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /lists
2025-09-03T20:04:59.499-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.515-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.515-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: insert into trello_list (board_id,name) values (?,?)
2025-09-03T20:04:59.848-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists
2025-09-03T20:04:59.848-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.870-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.870-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: select t1_0.id,t1_0.board_id,t1_0.name from trello_list t1_0
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:04:59.933-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists/97
2025-09-03T20:04:59.933-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.935-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.935-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/97
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:04:59.961-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /lists/97
2025-09-03T20:04:59.961-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.962-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.962-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/97
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update trello_list set board_id=?,name=? where id=?
2025-09-03T20:04:59.988-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/18
2025-09-03T20:04:59.988-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:04:59.989-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:04:59.989-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/18
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:05:00.008-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:05:00.008-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.009-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.009-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:05:00.038-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:05:00.038-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.039-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.039-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:05:00.086-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/9
2025-09-03T20:05:00.086-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.088-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.089-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:00.127-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/9/assign
2025-09-03T20:05:00.127-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.128-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.128-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:05:00.213-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/9/move
2025-09-03T20:05:00.213-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.220-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.220-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:05:00.259-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/9/update-metadata
2025-09-03T20:05:00.259-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.260-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.260-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:00.304-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/9/history
2025-09-03T20:05:00.305-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.307-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.307-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:00.339-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T20:05:00.339-04:00  WARN 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards
2025-09-03T20:05:00.365-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /boards
2025-09-03T20:05:00.365-04:00  WARN 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /boards
2025-09-03T20:05:00.382-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards
2025-09-03T20:05:00.383-04:00  WARN 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /cards
2025-09-03T20:05:00.400-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:05:00.400-04:00  WARN 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: No valid Authorization header found for /cards
2025-09-03T20:05:00.414-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards/99999
2025-09-03T20:05:00.414-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.414-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.414-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/99999
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
2025-09-03T20:05:00.417-04:00  WARN 12705 --- [nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: Board not found]
2025-09-03T20:05:00.430-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists/99999
2025-09-03T20:05:00.430-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.432-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.432-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/99999
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:05:00.435-04:00  WARN 12705 --- [nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: List not found]
2025-09-03T20:05:00.448-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/99999
2025-09-03T20:05:00.448-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.449-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.449-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/99999
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
2025-09-03T20:05:00.452-04:00  WARN 12705 --- [nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: Card not found with id: 99999]
2025-09-03T20:05:00.467-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:05:00.467-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.467-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.467-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
2025-09-03T20:05:00.470-04:00  WARN 12705 --- [nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.RuntimeException: List not found with id: 99999]
2025-09-03T20:05:00.483-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /cards/9
2025-09-03T20:05:00.484-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.484-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.485-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/9
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:05:00.503-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /lists/97
2025-09-03T20:05:00.503-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.504-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.504-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists/97
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: delete from card_comments where card_id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: delete from card where id=?
Hibernate: delete from trello_list where id=?
2025-09-03T20:05:00.529-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing DELETE request to /boards/18
2025-09-03T20:05:00.529-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.529-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.529-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards/18
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from trello_list where id=?
Hibernate: delete from board where id=?
2025-09-03T20:05:00.550-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /boards
2025-09-03T20:05:00.550-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.551-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.551-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /boards
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select l1_0.board_id,l1_0.id,l1_0.name from trello_list l1_0 where l1_0.board_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
2025-09-03T20:05:00.586-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /lists
2025-09-03T20:05:00.586-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.587-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.587-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /lists
Hibernate: select t1_0.id,t1_0.board_id,t1_0.name from trello_list t1_0
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility from board b1_0 where b1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:00.617-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards
2025-09-03T20:05:00.617-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:00.618-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user fixed@example.com
2025-09-03T20:05:00.618-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select c1_0.id,c1_0."assigned_user_id",c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.list_id,c1_0.title from card c1_0
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:40.685-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/transition
2025-09-03T20:05:40.697-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:05:40.767-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/transition
2025-09-03T20:05:40.767-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:40.782-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:05:40.801-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:05:40.846-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:05:40.878-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/move
2025-09-03T20:05:40.878-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:05:40.879-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/move
2025-09-03T20:05:40.879-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:40.880-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:05:40.881-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:05:40.881-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:05:43.675-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T20:05:43.675-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:43.677-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:05:43.681-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:05:43.684-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:05:57.830-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T20:05:57.831-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:05:57.838-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:05:57.843-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:05:57.861-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:06:04.525-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/transition
2025-09-03T20:06:04.525-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:06:04.536-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/transition
2025-09-03T20:06:04.536-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:06:04.538-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:06:04.540-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:06:04.542-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:06:04.563-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/move
2025-09-03T20:06:04.563-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:06:04.565-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/move
2025-09-03T20:06:04.565-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:06:04.566-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:06:04.567-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:06:04.571-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:06:09.694-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T20:06:09.694-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:06:09.697-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:06:09.698-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:06:09.700-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:06:12.804-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T20:06:12.804-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:06:12.805-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:06:12.806-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:06:12.808-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0
2025-09-03T20:07:50.271-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:07:50.272-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:07:50.280-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:07:50.280-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:07:56.003-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/assign
2025-09-03T20:07:56.003-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:07:56.007-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verified for user assign@example.com
2025-09-03T20:07:56.007-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:10:15.640-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 43 class path changes (3 additions, 0 deletions, 40 modifications)
2025-09-03T20:10:15.683-04:00  INFO 12705 --- [      Thread-19] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:10:15.688-04:00  INFO 12705 --- [      Thread-19] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T20:10:15.706-04:00  WARN 12705 --- [      Thread-19] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-5 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:10:15.773-04:00  INFO 12705 --- [      Thread-19] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:10:15.787-04:00  INFO 12705 --- [      Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2025-09-03T20:10:15.791-04:00  INFO 12705 --- [      Thread-19] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:10:16.025-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:10:16.025-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:10:16.167-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:10:16.175-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 4 JPA repository interfaces.
2025-09-03T20:10:16.288-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:10:16.288-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:10:16.288-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:10:16.303-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:10:16.304-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 277 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:10:16.331-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:10:16.334-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:10:16.334-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:10:16.335-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2025-09-03T20:10:16.355-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@32bd9965
2025-09-03T20:10:16.355-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2025-09-03T20:10:16.380-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:10:16.416-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T20:10:16.501-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:10:16.540-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T20:10:16.540-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T20:10:16.540-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T20:10:16.540-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T20:10:16.542-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T20:10:16.542-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T20:10:16.542-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T20:10:16.587-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:10:16.648-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:10:16.652-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:10:16.654-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.642 seconds (process running for 1006.92)
Hibernate: select count(*) from "user" u1_0
2025-09-03T20:10:16.657-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T20:11:23.718-04:00  INFO 12705 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-03T20:11:23.719-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-09-03T20:11:23.724-04:00  INFO 12705 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2025-09-03T20:11:23.725-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/update-metadata
2025-09-03T20:11:23.725-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:23.734-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:23.736-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:23.773-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:11:28.760-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing POST request to /cards
2025-09-03T20:11:28.760-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:28.761-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:28.762-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:28.763-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: insert into card ("assigned_user_id",created_at,current_state,description,due_date,label,list_id,title) values (?,?,?,?,?,?,?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:30.228-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/history
2025-09-03T20:11:30.229-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:30.233-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/10/history
2025-09-03T20:11:30.233-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:30.235-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:30.236-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:30.238-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:11:32.722-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/assign
2025-09-03T20:11:32.723-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:32.727-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/assign
2025-09-03T20:11:32.727-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:32.729-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:32.731-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:32.732-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/assign
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:36.162-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/transition
2025-09-03T20:11:36.162-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:36.182-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/transition
2025-09-03T20:11:36.182-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:36.183-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:36.185-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:36.186-04:00  INFO 12705 --- [io-8080-exec-10] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:36.204-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/move
2025-09-03T20:11:36.204-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:36.205-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/move
2025-09-03T20:11:36.206-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:36.207-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:36.207-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:36.208-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:11:37.108-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/update-metadata
2025-09-03T20:11:37.108-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:37.112-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/update-metadata
2025-09-03T20:11:37.112-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:37.114-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:37.115-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:37.117-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/update-metadata
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select c1_0.card_id,c1_0.comments from card_comments c1_0 where c1_0.card_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:11:47.039-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/move
2025-09-03T20:11:47.039-04:00  INFO 12705 --- [nio-8080-exec-6] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:47.042-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/move
2025-09-03T20:11:47.042-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:47.045-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:47.047-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:47.049-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:11:47.060-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/5/transition
2025-09-03T20:11:47.061-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:47.062-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/transition
2025-09-03T20:11:47.062-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:47.063-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:47.064-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:47.066-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:48.788-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/move
2025-09-03T20:11:48.788-04:00  INFO 12705 --- [nio-8080-exec-1] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:48.791-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/move
2025-09-03T20:11:48.791-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:48.792-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:48.795-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:48.797-04:00  INFO 12705 --- [nio-8080-exec-2] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:11:48.809-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing OPTIONS request to /cards/10/transition
2025-09-03T20:11:48.809-04:00  INFO 12705 --- [nio-8080-exec-3] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Allowing OPTIONS request for CORS preflight
2025-09-03T20:11:48.811-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/10/transition
2025-09-03T20:11:48.811-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:48.813-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:48.815-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:48.817-04:00  INFO 12705 --- [nio-8080-exec-4] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:49.290-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/10/history
2025-09-03T20:11:49.290-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:49.292-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:49.294-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:49.297-04:00  INFO 12705 --- [nio-8080-exec-5] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/10/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:11:54.804-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/move
2025-09-03T20:11:54.805-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:54.807-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:54.809-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:54.817-04:00  INFO 12705 --- [nio-8080-exec-7] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/move
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select t1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,t1_0.name,c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from trello_list t1_0 left join board b1_0 on b1_0.id=t1_0.board_id left join card c1_0 on t1_0.id=c1_0.list_id left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where t1_0.id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
2025-09-03T20:11:54.827-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing PUT request to /cards/5/transition
2025-09-03T20:11:54.827-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:54.828-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:54.828-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:54.829-04:00  INFO 12705 --- [nio-8080-exec-8] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/transition
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
Hibernate: update card set "assigned_user_id"=?,created_at=?,current_state=?,description=?,due_date=?,label=?,list_id=?,title=? where id=?
Hibernate: delete from card_state_history where card_id=?
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
Hibernate: insert into card_state_history (card_id,state_history) values (?,?)
2025-09-03T20:11:55.654-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Processing GET request to /cards/5/history
2025-09-03T20:11:55.654-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Found Authorization header
2025-09-03T20:11:55.655-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: JWT token verification failed, trying Firebase token
2025-09-03T20:11:55.656-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Firebase token verified for user mXr7HIXL2zTQqCt8Onf7doJAnta2
Hibernate: select u1_0.id,u1_0.email,u1_0.name,u1_0.password from "user" u1_0 where u1_0.id=?
2025-09-03T20:11:55.658-04:00  INFO 12705 --- [nio-8080-exec-9] b.d.security.FirebaseTokenFilter         : 🔐 FirebaseTokenFilter: Continuing filter chain for /cards/5/history
Hibernate: select c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,l1_0.id,b1_0.id,b1_0.is_private,b1_0.name,b1_0.owner_id,b1_0.owner_name,b1_0.visibility,l1_0.name,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" left join trello_list l1_0 on l1_0.id=c1_0.list_id left join board b1_0 on b1_0.id=l1_0.board_id where c1_0.id=?
Hibernate: select c1_0.list_id,c1_0.id,a1_0.id,a1_0.email,a1_0.name,a1_0.password,c1_0.created_at,c1_0.current_state,c1_0.description,c1_0.due_date,c1_0.label,c1_0.title from card c1_0 left join "user" a1_0 on a1_0.id=c1_0."assigned_user_id" where c1_0.list_id=?
Hibernate: select s1_0.card_id,s1_0.state_history from card_state_history s1_0 where s1_0.card_id=?
2025-09-03T20:12:27.515-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 43 class path changes (0 additions, 39 deletions, 4 modifications)
2025-09-03T20:12:27.549-04:00  INFO 12705 --- [      Thread-23] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:12:27.550-04:00  INFO 12705 --- [      Thread-23] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
2025-09-03T20:12:27.569-04:00  WARN 12705 --- [      Thread-23] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-6 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:12:27.595-04:00  INFO 12705 --- [      Thread-23] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:27.927-04:00  INFO 12705 --- [      Thread-23] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2025-09-03T20:12:28.025-04:00  INFO 12705 --- [      Thread-23] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:12:28.228-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:12:28.228-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:12:28.517-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:12:28.552-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 4 JPA repository interfaces.
2025-09-03T20:12:28.674-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:12:28.674-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:12:28.674-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:12:28.682-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:12:28.682-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 453 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:12:28.702-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:12:28.706-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:28.707-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:12:28.707-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Starting...
2025-09-03T20:12:28.732-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-7 - Added connection org.postgresql.jdbc.PgConnection@4522a20e
2025-09-03T20:12:28.732-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Start completed.
2025-09-03T20:12:28.766-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:28.799-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T20:12:28.988-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:29.050-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T20:12:29.050-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T20:12:29.050-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T20:12:29.050-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T20:12:29.051-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T20:12:29.051-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T20:12:29.051-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T20:12:29.108-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:12:29.156-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:12:29.162-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:12:29.164-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.963 seconds (process running for 1139.429)
Hibernate: select count(*) from "user" u1_0
2025-09-03T20:12:29.189-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T20:12:30.572-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 36 class path changes (36 additions, 0 deletions, 0 modifications)
2025-09-03T20:12:30.576-04:00  INFO 12705 --- [      Thread-27] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:12:30.577-04:00  WARN 12705 --- [      Thread-27] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-7 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:12:30.577-04:00  WARN 12705 --- [      Thread-27] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-7 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:12:30.578-04:00  INFO 12705 --- [      Thread-27] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:30.578-04:00  INFO 12705 --- [      Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown initiated...
2025-09-03T20:12:30.579-04:00  INFO 12705 --- [      Thread-27] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:12:30.634-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:12:30.634-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:12:30.689-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:12:30.695-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 4 JPA repository interfaces.
2025-09-03T20:12:30.737-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:12:30.737-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:12:30.737-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:12:30.743-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:12:30.743-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 108 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:12:30.757-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:12:30.759-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:30.759-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:12:30.759-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Starting...
2025-09-03T20:12:30.768-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-8 - Added connection org.postgresql.jdbc.PgConnection@7207392d
2025-09-03T20:12:30.768-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Start completed.
2025-09-03T20:12:30.778-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:30.796-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T20:12:30.849-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T20:12:30.885-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T20:12:30.926-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:12:30.979-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:12:30.983-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:12:30.985-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.358 seconds (process running for 1141.25)
Hibernate: select count(*) from "user" u1_0
2025-09-03T20:12:30.988-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T20:12:55.607-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 40 class path changes (0 additions, 36 deletions, 4 modifications)
2025-09-03T20:12:55.615-04:00  INFO 12705 --- [      Thread-31] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:12:55.620-04:00  WARN 12705 --- [      Thread-31] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-8 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-09-03T20:12:55.625-04:00  INFO 12705 --- [      Thread-31] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:55.627-04:00  INFO 12705 --- [      Thread-31] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Shutdown initiated...
2025-09-03T20:12:55.628-04:00  INFO 12705 --- [      Thread-31] com.zaxxer.hikari.HikariDataSource       : HikariPool-8 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:12:55.725-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:12:55.725-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:12:55.781-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:12:55.781-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 0 ms. Found 0 JPA repository interfaces.
2025-09-03T20:12:55.829-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:12:55.829-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:12:55.829-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:12:55.835-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:12:55.835-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 108 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:12:55.854-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:12:55.859-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:55.859-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:12:55.860-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Starting...
2025-09-03T20:12:55.867-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-9 - Added connection org.postgresql.jdbc.PgConnection@39cd5d6c
2025-09-03T20:12:55.867-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Start completed.
2025-09-03T20:12:55.873-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:55.877-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-09-03T20:12:55.877-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:55.886-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:12:55.951-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:12:55.955-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:12:55.957-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.243 seconds (process running for 1166.222)
2025-09-03T20:12:55.958-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-09-03T20:12:57.526-04:00  INFO 12705 --- [   File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 36 class path changes (36 additions, 0 deletions, 0 modifications)
2025-09-03T20:12:57.535-04:00  INFO 12705 --- [      Thread-35] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2025-09-03T20:12:57.541-04:00  INFO 12705 --- [      Thread-35] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:57.542-04:00  INFO 12705 --- [      Thread-35] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown initiated...
2025-09-03T20:12:57.546-04:00  INFO 12705 --- [      Thread-35] com.zaxxer.hikari.HikariDataSource       : HikariPool-9 - Shutdown completed.
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2025-09-03T20:12:57.623-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Starting TrellloApplication using Java 17.0.15 with PID 12705 (/Users/nishanthvaidya/Desktop/OOD/Balekai/target/classes started by nishanthvaidya in /Users/nishanthvaidya/Desktop/OOD/Balekai)
2025-09-03T20:12:57.623-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : No active profile set, falling back to 1 default profile: "default"
2025-09-03T20:12:57.692-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-03T20:12:57.699-04:00  INFO 12705 --- [  restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 4 JPA repository interfaces.
2025-09-03T20:12:57.749-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-09-03T20:12:57.749-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-09-03T20:12:57.749-04:00  INFO 12705 --- [  restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.11]
2025-09-03T20:12:57.756-04:00  INFO 12705 --- [  restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-09-03T20:12:57.756-04:00  INFO 12705 --- [  restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 132 ms
Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
2025-09-03T20:12:57.773-04:00  INFO 12705 --- [  restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-03T20:12:57.776-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:57.776-04:00  INFO 12705 --- [  restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-09-03T20:12:57.777-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Starting...
2025-09-03T20:12:57.782-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-10 - Added connection org.postgresql.jdbc.PgConnection@9e25ebe
2025-09-03T20:12:57.782-04:00  INFO 12705 --- [  restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-10 - Start completed.
2025-09-03T20:12:57.795-04:00  INFO 12705 --- [  restartedMain] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2025-09-03T20:12:57.819-04:00  INFO 12705 --- [  restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: alter table if exists card alter column created_at set data type timestamp(6)
2025-09-03T20:12:57.966-04:00  INFO 12705 --- [  restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-03T20:12:58.002-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔥 Initializing Firebase configuration...
2025-09-03T20:12:58.002-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file found: true
2025-09-03T20:12:58.002-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📁 Firebase config file path: firebase-service-account.json
2025-09-03T20:12:58.002-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 📖 Reading Firebase service account...
2025-09-03T20:12:58.003-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Firebase options built successfully
2025-09-03T20:12:58.003-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : 🔧 Project ID: null
2025-09-03T20:12:58.003-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.config.FirebaseConfig   : ℹ️ Firebase already initialized
2025-09-03T20:12:58.052-04:00  WARN 12705 --- [  restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-09-03T20:12:58.103-04:00  INFO 12705 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-09-03T20:12:58.109-04:00  INFO 12705 --- [  restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-09-03T20:12:58.110-04:00  INFO 12705 --- [  restartedMain] b.designpatterns.TrellloApplication      : Started TrellloApplication in 0.497 seconds (process running for 1168.376)
Hibernate: select count(*) from "user" u1_0
2025-09-03T20:12:58.113-04:00  INFO 12705 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
