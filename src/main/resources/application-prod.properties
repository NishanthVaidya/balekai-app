# === Production Configuration for AWS ===
server.port=8080

# === Server Timeout Configuration ===
server.tomcat.connection-timeout=30000
server.tomcat.keep-alive-timeout=30000
server.tomcat.max-keep-alive-requests=100
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10

# === Database Configuration (AWS RDS) ===
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# === Aggressive HikariCP Configuration for Connection Issues ===
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=5000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.validation-timeout=2000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.initialization-fail-timeout=5000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=BalekaiPool



# === JPA Configuration ===
spring.jpa.hibernate.ddl-auto=update
spring.datasource.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# === JWT Configuration ===
jwt.secret=${JWT_SECRET:supersecretkeythatislongenough123456}

# === Logging ===
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.balekai.designpatterns.controller.AuthController=INFO
logging.level.org.mindrot.jbcrypt=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari.pool.HikariPool=DEBUG

# === Production Optimizations ===
spring.jpa.open-in-view=false
spring.devtools.restart.enabled=false

# === Health Check Endpoint ===
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
